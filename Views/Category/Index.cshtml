@model IEnumerable<Category>

@{
    Layout = "~/Views/Shared/AdminDashboard.cshtml";
}

@{
    ViewData["Title"] = "Category Dashboard";
}
<link rel="stylesheet" href="~/css/Components.css" asp-append-version="true" />

<div class="tablestyle">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Category View</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-controller="Category" asp-action="CreateCategory" class="btn btn-primary">
                <i class="bi bi-plus"></i> &nbsp; Add New Category
            </a>
        </div>
    </div>
    <!-- Table Section -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Category Name</th>
                <th scope="col">Category Image</th>
                <th scope="col">Category Status</th>
                <th scope="col">Created On</th>
                <th scope="col">Updated On</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.CategoryName</td>
                    <td>
                        <img src="@Url.Content(item.CategoryImagePath)" class="img-fluid rounded-start" alt="Category Image" style="height: 100px">
                    </td>
                    <td>
                        @if (item.CategoryStatus == true)
                        {
                            <button class="btn btn-outline-success" onclick="changeStatus('@item.CategoryId', true)">Active</button>
                        }
                        else
                        {
                            <button class="btn btn-outline-danger" onclick="changeStatus('@item.CategoryId', true)">Not-Active</button>
                        }
                    </td>
                    <td>@item.CreatedOn</td>
                    <td>@item.UpdatedOn</td>
                    <td>
                        <button type="button" class="btn btn-success" onclick="window.location.href='@Url.Action("EditCategory", "Category", new { id = item.CategoryId })'">
                            <i class='bx bxs-edit-alt'></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Include CSRF token for fetch request -->
<form id="csrf-form">
    @Html.AntiForgeryToken()
</form>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script type="text/javascript">
    function changeStatus(categoryId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You are about to change the status of this category.",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, change it!'
    }).then((result) => {
        if (result.isConfirmed) {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch('/Category/ChangeStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': token
                },
                body: JSON.stringify({
                    CategoryId: categoryId // Include the correct ID here
                })
            }).then(response => response.json())
              .then(data => {
                  if (data.success) {
                      Swal.fire(
                          'Updated!',
                          'Category status has been updated.',
                          'success'
                      ).then(() => {
                          location.reload();
                      });
                  } else {
                      Swal.fire(
                          'Error!',
                          `An error occurred: ${data.message}`,
                          'error'
                      );
                  }
              }).catch(error => {
                  console.error('Error:', error);
                  Swal.fire(
                      'Error!',
                      'An unexpected error occurred.',
                      'error'
                  );
              });
        }
    });
}
</script>

